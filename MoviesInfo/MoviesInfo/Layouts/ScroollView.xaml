<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" x:Class="MoviesInfo.Layouts.ScroollView" Title="ScrollView Demo">
    <StackLayout>
        <Label Text="ScrollView" FontSize="50" FontAttributes="Bold" HorizontalOptions="Center" />
        <ScrollView VerticalOptions="FillAndExpand" Margin="10">
            <Label Text="Sometimes page content fits entirely on&#xA;&#xA;the page. That's very convenient. But&#xA;&#xA;on many occasions, the content of the page&#xA;&#xA;is much too large for the page, or only&#xA;&#xA;becomes available at runtime.&#xA;&#xA;&#xA;&#xA;For cases such as these, the ScrollView&#xA;&#xA;provides a solution. Simply set its&#xA;&#xA;Content property to your content — in this&#xA;&#xA;case a Label but in the general case very&#xA;&#xA;likely a Layout derivative with multiple&#xA;&#xA;children — and the ScrollView provides&#xA;&#xA;scrolling with the distinctive look and touch&#xA;&#xA;familiar to the user.&#xA;&#xA;&#xA;&#xA;The ScrollView is also capable of&#xA;&#xA;horizontal scrolling, and while that's&#xA;&#xA;usually not as common as vertical scrolling,&#xA;&#xA;sometimes it comes in handy.&#xA;&#xA;&#xA;&#xA;Most often, the content of a ScrollView is&#xA;&#xA;a StackLayout. Whenever you're using a&#xA;&#xA;StackLayout with a number of items determined&#xA;&#xA;only at runtime, you should probably put it in&#xA;&#xA;a ScrollView just to be sure your stuff doesn't&#xA;&#xA;go running off the bottom of the screen." FontSize="Large" />
        </ScrollView>
    </StackLayout>
</ContentPage>